cube <- function(x, n) {}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
class(x)
if (x > 5) {
x <- 0
}
x
if (x > 0) {
x <- -1
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
library(datasets)
data(iris)
head(iris)
mean(iris$Sepal.Length[which(iris$Species=="virginica")], na.rm=T)
mean(iris$Sepal.Length[which(iris$Species=="virginica")], na.rm=F)
apply(iris[,1:4], 2, mean)
data(mtcars)
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$hp[mtcars$cyl==8], na.rm=T)
mean(mtcars$hp[mtcars$cyl==8], na.rm=T) - mean(mtcars$hp[mtcars$cyl==4], na.rm=T)
install.packages("swirl")
remocoesDW <- read.csv("C:/Users/DELL/SkyDrive/Open data/SAMU2015/remocoesDW.csv", stringsAsFactors=FALSE)
View(remocoesDW)
hist(remocoesDW$hospital_codigo)
remocoesDW <- remocoesDW[ , -1]
hist(remocoesDW$distritosanitario_codigo)
hist(remocoesDW$bairrosaude_codigo)
remocoes2015 <- read.csv("C:/Users/DELL/SkyDrive/Open data/SAMU2015/remocoes2015.csv", sep=";", stringsAsFactors=FALSE)
View(remocoes2015)
hist(remocoesDW$remocao_datahora)
hist(remocoesDW$hospital_codigo)
IoT_Demo_Data <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Data.csv", stringsAsFactors=FALSE)
View(IoT_Demo_Data)
help(uniform)
ncol(IoT_Demo_Data)
iot <- IoT_Demo_Data[ , 1:13]
View(iot)
View(IoT_Demo_Data)
tweak <- function(x) {
N = 1000
for (i in 1:N) {
u = runif(N)
x = x + u
}
x = x - N/2
x = x * sqrt(12 / N)
}
iotTweaked <- lapply(iot( , 2:13))
iotTweaked <- lapply(tweak, iot( , 2:13))
iotTweaked <- lapply(iot( , 2:13), tweak)
iotTweaked <- lapply(iot[ , 2:13], tweak)
View(iot)
iotTweaked <- sapply(iot[ , 2:13], tweak)
iotTweaked <- tapply(iot[ , 2:13], tweak)
iotTweaked <- as.data.frame(sapply(iot[ , 2:13], tweak))
View(iotTweaked)
write.csv(iotTweaked, file = "C:/ML Experiments/IoT_Demo/IoT_Demo_Tweaked.csv")
IoT_Demo_Tweaked <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Tweaked.csv", stringsAsFactors=FALSE)
View(IoT_Demo_Tweaked)
IoT_Demo_Data <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Data.csv", stringsAsFactors=FALSE)
View(IoT_Demo_Data)
View(IoT_Demo_Tweaked)
IoT_Demo_Data <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Data.csv", stringsAsFactors=FALSE)
iot <- IoT_Demo_Data[ , 1:13]
# X=0
# for i = 1 to N
# U = uniform()
# X = X + U
# end
#
# /* for uniform randoms in [0,1], mu = 0.5 and var = 1/12 */
#   /* adjust X so mu = 0 and var = 1 */
#
#   X = X - N/2                /* set mean to 0 */
#   X = X * sqrt(12 / N)       /* adjust variance to 1 */
tweak <- function(x) {
N = 1000
for (i in 1:N) {
u = runif(N)
x = x + u
}
x = x - N/2
x = x * sqrt(12 / N)
}
iotTweaked <- as.data.frame(sapply(iot[ , 2:13], tweak))
iotTweaked[ , 14] <- 0
iotTweaked[ , 13] <- 0
View(iotTweaked)
names(iotTweaked)[13] <- "Recommended.Maintenance"
View(iotTweaked)
View(IoT_Demo_Data)
write.csv(iotTweaked, file = "C:/ML Experiments/IoT_Demo/IoT_Demo_Tweaked.csv")
IoT_Demo_Tweaked <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Tweaked.csv", stringsAsFactors=FALSE)
View(IoT_Demo_Tweaked)
IoT_Demo_Tweaked <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Tweaked.csv", stringsAsFactors=FALSE)
View(IoT_Demo_Tweaked)
IoT_Demo_Scored <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Scored.csv", header=FALSE, stringsAsFactors=FALSE)
View(IoT_Demo_Scored)
IoT_Demo_Tweaked[ , "Recommended.Maintenance"] <- IoT_Demo_Scored[ , "Recommended.Maintenance"]
IoT_Demo_Tweaked[ , "Recommended.Maintenance"] <- IoT_Demo_Scored[ , "Scored Labels"]
IoT_Demo_SCored[, "Scored Labels"]
IoT_Demo_Scored[, "Scored Labels"]
IoT_Demo_Scored[, 16]
IoT_Demo_Tweaked[ , "Recommended.Maintenance"] <- IoT_Demo_Scored[ , 16]
Iot_Demo_Final <- read.csv("C:/ML Experiments/IoT_Demo/Iot_Demo_Final.csv", header=FALSE, stringsAsFactors=FALSE)
View(Iot_Demo_Final)
IoT_Demo_Scored <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Scored.csv", header=FALSE, stringsAsFactors=FALSE)
View(IoT_Demo_Scored)
IoT_Demo_Data <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Data.csv", stringsAsFactors=FALSE)
View(IoT_Demo_Data)
IoT_Demo_Tweaked[ , "Recommended.Maintenance"] <- IoT_Demo_Data[ , 14]
IoT_Demo_Tweaked[ , which(IoT_Demo_Tweaked$Recommended.Maintenance == 1)]
IoT_Demo_Tweaked[which(IoT_Demo_Tweaked$Recommended.Maintenance == 1), ]
write.csv(IoT_Demo_Tweaked, file = "C:/ML Experiments/IoT_Demo/IoT_Demo_Tweaked.csv")
IoT_demo_results_dataset <- read.csv("C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv", stringsAsFactors=FALSE)
View(IoT_demo_results_dataset)
IoT_demo_results_dataset[ , 16] <- (1 - IoT_demo_results_dataset[ , 15]) * 100
View(IoT_demo_results_dataset)
write.csv(IoT_demo_results_dataset, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv")
IoT_demo_results_dataset <- read.csv("C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv", header=FALSE, stringsAsFactors=FALSE)
View(IoT_demo_results_dataset)
IoT_demo_results_dataset <- read.csv("C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv", stringsAsFactors=FALSE)
View(IoT_demo_results_dataset)
iot <- IoT_demo_results_dataset[, 2:17]
names(iotTweaked)[1] <- "Index"
names(iot)[1] <- "Index"
names(iot)[16] <- "Predicted.Health"
View(iot)
write.csv(iot, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv")
IoT_demo_results_dataset <- read.csv("C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv", stringsAsFactors=FALSE)
View(IoT_demo_results_dataset)
IoT_Demo_Tweaked <- read.csv("C:/ML Experiments/IoT_Demo/IoT_Demo_Tweaked.csv", stringsAsFactors=FALSE)
View(IoT_Demo_Tweaked)
boxplot(IoT_Demo_Tweaked$DischargPressureOut)
boxplot(!is.na(IoT_Demo_Tweaked$DischargPressureOut))
!is.na(IoT_Demo_Tweaked$DischargPressureOut)
!is.na(IoT_Demo_Tweaked$DischargePressureOut)
boxplot(IoT_Demo_Tweaked$DischargePressureOut)
boxplot(IoT_Demo_Tweaked$MotorTempOutside)
boxplot(IoT_Demo_Tweaked$TemperatureInside)
boxplot(IoT_Demo_Tweaked$ElectricalKWConsumptionAVG)
total <- nrow(IoT_Demo_Tweaked)
mark <- total / 5
class(mark)
mark <- as.integer(mark)
ds1 <- IoT_Demo_Tweaked[1:mark ,]
ds2 <- IoT_Demo_Tweaked[mark + 1:2*mark ,]
ds2 <- IoT_Demo_Tweaked[2*mark + 1:3*mark ,]
ds2 <- IoT_Demo_Tweaked[(mark + 1) : 2*mark ,]
ds3 <- IoT_Demo_Tweaked[(2*mark + 1) : 3*mark ,]
ds3 <- IoT_Demo_Tweaked[(2*mark + 1 : 3*mark ,]
from <- 2 * mark + 1
to <- 3 * mark
ds3 <- IoT_Demo_Tweaked[from:to,]
from <- 3 * mark + 1
to <- 4 * mark
ds4 <- IoT_Demo_Tweaked[from:to,]
from <- 4 * mark + 1
to <- 427933
ds5 <- IoT_Demo_Tweaked[from:to,]
write.csv(ds1, file = "C:/ML Experiments/IoT_Demo/IoT_Tweaked_ds1.csv")
write.csv(ds2, file = "C:/ML Experiments/IoT_Demo/IoT_Tweaked_ds2.csv")
write.csv(ds3, file = "C:/ML Experiments/IoT_Demo/IoT_Tweaked_ds3.csv")
View(ds1)
View(ds3)
write.csv(ds4, file = "C:/ML Experiments/IoT_Demo/IoT_Tweaked_ds4.csv")
write.csv(ds5, file = "C:/ML Experiments/IoT_Demo/IoT_Tweaked_ds5.csv")
from <- mark + 1
to <- 2 * mark
ds2 <- IoT_Demo_Tweaked[from:to, ]
write.csv(ds2, file = "C:/ML Experiments/IoT_Demo/IoT_Tweaked_ds2.csv")
View(ds2)
View(ds4)
View(ds5)
iot <- read.csv("C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv", stringsAsFactors=FALSE)
View(iot)
iot[ , 16] <- (1 - iot[ , 15]) * 100
View(iot)
write.csv(iot, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv")
total <- nrow(iot)
mark <- total / 5
ds1 <- iot[1:mark ,]
from <- 2 * mark + 1
to <- 3 * mark
ds2 <- iot[mark + 1:2*mark ,]
ds3 <- iot[from:to,]
from <- 3 * mark + 1
to <- 4 * mark
ds4 <- iot[from:to,]
from <- 4 * mark + 1
to <- 427933
ds5 <- iot[from:to,]
write.csv(ds1, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds1.csv")
write.csv(ds2, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds2.csv")
write.csv(ds3, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds3.csv")
write.csv(ds4, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds4.csv")
write.csv(ds5, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds5.csv")
View(iot)
iot <- read.csv("C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv", stringsAsFactors=FALSE)
View(iot)
iot <- read.csv("C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv", stringsAsFactors=FALSE)
View(iot)
iot[ , 16] <- (1 - iot[ , 15]) * 100
View(iot)
names(iot)[16] <- "Predicted.Health"
View(iot)
write.csv(iot, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv")
iot <- read.csv("C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv", stringsAsFactors=FALSE)
View(iot)
iot[ , 16] <- (1 - iot[ , 15]) * 100
names(iot)[16] <- "Predicted.Health"
View(iot)
total <- nrow(iot)
mark <- total / 5
ds1 <- iot[1:mark ,]
ds2 <- iot[mark + 1:2*mark ,]
from <- 2 * mark + 1
to <- 3 * mark
ds3 <- iot[from:to,]
from <- 3 * mark + 1
to <- 4 * mark
ds4 <- iot[from:to,]
from <- 4 * mark + 1
to <- 427933
ds5 <- iot[from:to,]
from <- mark + 1
to <- 2 * mark
ds2 <- iot[from:to ,]
from <- 2 * mark + 1
to <- 3 * mark
ds3 <- iot[from:to,]
from <- 3 * mark + 1
to <- 4 * mark
ds4 <- iot[from:to,]
from <- 4 * mark + 1
to <- 427933
ds5 <- iot[from:to,]
View(ds5)
View(ds4)
total <- nrow(iot)
mark <- total / 5
ds1 <- iot[1:mark ,]
from <- mark + 1
to <- 2 * mark
ds2 <- iot[from:to ,]
from <- 2 * mark + 1
to <- 3 * mark
ds3 <- iot[from:to,]
from <- 3 * mark + 1
to <- 4 * mark
ds4 <- iot[from:to,]
from <- 4 * mark + 1
to <- 427933
ds5 <- iot[from:to,]
total <- nrow(iot)
mark <- 85586
ds1 <- iot[1:mark ,]
from <- mark + 1
to <- 2 * mark
ds2 <- iot[from:to ,]
from <- 2 * mark + 1
to <- 3 * mark
ds3 <- iot[from:to,]
from <- 3 * mark + 1
to <- 4 * mark
ds4 <- iot[from:to,]
from <- 4 * mark + 1
to <- 427933
ds5 <- iot[from:to,]
write.csv(ds1, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds1.csv")
write.csv(ds2, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds2.csv")
write.csv(ds3, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds3.csv")
write.csv(ds4, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds4.csv")
write.csv(ds5, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_ds5.csv")
write.csv(iot, file = "C:/ML Experiments/IoT_Demo/IoT_demo_results_dataset.csv")
boxplot(iot$ElectricalMeterReading)
getdata.wksst8110 <- read.table("C:/Users/DELL/Dropbox/Coursera/Data Science/Cleaning Data/getdata-wksst8110.for", quote="\"", stringsAsFactors=FALSE)
View(getdata.wksst8110)
library(data.table)
install.packages("data.table")
library(data.table)
sample(1:5)
X <- data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
X
X <- X[sample(1:5),]
X
help("sample")
y = (1:5)
y
class(y)
X[1,1]
X[1,]
X[1:2,]
Y <- X[1:2,]
class(Y)
X$var2[c(1,3)] = NA
X
library(plyr)
source('C:/Source/UCI_HAR_dataset/run_analysis.R')
